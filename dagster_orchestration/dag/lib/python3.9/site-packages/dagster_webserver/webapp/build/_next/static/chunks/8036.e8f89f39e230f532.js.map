{"version":3,"file":"static/chunks/8036.e8f89f39e230f532.js","mappings":"0QAIO,IAAMA,EAAoB,IAE7B,GAAAC,EAAAC,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CACTC,MAAO,GAAAH,EAAAC,GAAA,EAACG,EAAAA,EAAOA,CAAAA,UAAC,yBAChBC,MAAO,GAAAL,EAAAC,GAAA,EAACK,EAAAA,CAAeA,CAAAA,CAACC,MAAM,+FCc7B,IAAMC,EAAwB,KACnCC,CAAAA,EAAAA,EAAAA,EAAAA,IACA,GAAM,CAAC,EAAGC,CAAI,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IACZC,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,IAEhBC,CAAAA,EAAAA,EAAAA,CAAAA,EAAkB,wBAElB,IAAMC,EAAuBC,CAAAA,EAAAA,EAAAA,WAAAA,EAC3B,CAACN,EAAoBO,KACnBL,CAAO,CAACK,EAAK,CAAC,CACZC,SAAUC,CAAAA,EAAAA,EAAAA,EAAAA,EAA6BT,GACvCU,OAAQR,EAAQS,QAAQ,CAACD,MAAM,EAEnC,EACA,CAACR,EAAQ,EAGLU,EAA8BN,CAAAA,EAAAA,EAAAA,WAAAA,EAClC,CAACO,EAA2CC,KAC1C,IAAMd,EAAOe,CAAAA,EAAAA,EAAAA,CAAAA,EAAuBD,EAAKE,QAAQ,CAAE,CAACC,KAAM,YAAY,EAClEJ,CAAAA,EAAEK,OAAO,CACXC,OAAOC,IAAI,CAACpB,EAAM,UAElBE,EAAQmB,IAAI,CAACrB,EAEjB,EACA,CAACE,EAAQ,EAGLoB,EAAeC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IACW,EACpCC,6BAA8B,EAChC,GAEC,EAAE,EAEL,MACE,GAAAlC,EAAAmC,IAAA,EAACC,EAAAA,CAAIA,CAAAA,CAACC,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,cAAe,CAAC,YACtE,GAAAxC,EAAAC,GAAA,EAACF,EAAiBA,CAAAA,GAElB,GAAAC,EAAAC,GAAA,EAACwC,EAAAA,EAAkBA,CAAAA,CACjBT,aAAcA,EACdU,QAAS,CAACC,qBAAsB,GAAMC,kBAAmB,EAAI,EAC7DC,aAAcC,CAAAA,EAAAA,EAAAA,EAAAA,EAA+BpC,GAC7CK,qBAAsBA,EACtBO,4BAA6BA,EAC7ByB,SAAUC,EAAAA,EAAkBA,CAACC,MAAM,KAI3C,EAIA,IAAAC,EAAe1C","sources":["webpack://_N_E/../ui-core/src/assets/AssetsGraphHeader.oss.tsx","webpack://_N_E/../ui-core/src/assets/AssetsGlobalGraphRoot.tsx"],"sourcesContent":["import {Heading, PageHeader} from '@dagster-io/ui-components';\n\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\n\nexport const AssetsGraphHeader = () => {\n  return (\n    <PageHeader\n      title={<Heading>Global Asset Lineage</Heading>}\n      right={<ReloadAllButton label=\"Reload definitions\" />}\n    />\n  );\n};\n","import {Page} from '@dagster-io/ui-components';\nimport {useCallback, useMemo} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\nimport {AssetsGraphHeader} from 'shared/assets/AssetsGraphHeader.oss';\n\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {\n  globalAssetGraphPathFromString,\n  globalAssetGraphPathToString,\n} from './globalAssetGraphPathToString';\nimport {useTrackPageView} from '../app/analytics';\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphViewType} from '../asset-graph/Utils';\nimport {AssetGraphFetchScope} from '../asset-graph/useAssetGraphData';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {ExplorerPath} from '../pipelines/PipelinePathUtils';\n\ninterface AssetGroupRootParams {\n  0: string;\n}\n\nexport const AssetsGlobalGraphRoot = () => {\n  useTrackPageView();\n  const {0: path} = useParams<AssetGroupRootParams>();\n  const history = useHistory();\n\n  useDocumentTitle(`Global Asset Lineage`);\n\n  const onChangeExplorerPath = useCallback(\n    (path: ExplorerPath, mode: 'push' | 'replace') => {\n      history[mode]({\n        pathname: globalAssetGraphPathToString(path),\n        search: history.location.search,\n      });\n    },\n    [history],\n  );\n\n  const onNavigateToSourceAssetNode = useCallback(\n    (e: Pick<React.MouseEvent<any>, 'metaKey'>, node: AssetLocation) => {\n      const path = assetDetailsPathForKey(node.assetKey, {view: 'definition'});\n      if (e.metaKey) {\n        window.open(path, '_blank');\n      } else {\n        history.push(path);\n      }\n    },\n    [history],\n  );\n\n  const fetchOptions = useMemo(() => {\n    const options: AssetGraphFetchScope = {\n      hideEdgesToNodesOutsideQuery: false,\n    };\n    return options;\n  }, []);\n\n  return (\n    <Page style={{display: 'flex', flexDirection: 'column', paddingBottom: 0}}>\n      <AssetsGraphHeader />\n\n      <AssetGraphExplorer\n        fetchOptions={fetchOptions}\n        options={{preferAssetRendering: true, explodeComposites: true}}\n        explorerPath={globalAssetGraphPathFromString(path)}\n        onChangeExplorerPath={onChangeExplorerPath}\n        onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n        viewType={AssetGraphViewType.GLOBAL}\n      />\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default AssetsGlobalGraphRoot;\n"],"names":["AssetsGraphHeader","jsx_runtime","jsx","PageHeader","title","Heading","right","ReloadAllButton","label","AssetsGlobalGraphRoot","useTrackPageView","path","useParams","history","useHistory","useDocumentTitle","onChangeExplorerPath","useCallback","mode","pathname","globalAssetGraphPathToString","search","location","onNavigateToSourceAssetNode","e","node","assetDetailsPathForKey","assetKey","view","metaKey","window","open","push","fetchOptions","useMemo","hideEdgesToNodesOutsideQuery","jsxs","Page","style","display","flexDirection","paddingBottom","AssetGraphExplorer","options","preferAssetRendering","explodeComposites","explorerPath","globalAssetGraphPathFromString","viewType","AssetGraphViewType","GLOBAL","assets_AssetsGlobalGraphRoot"],"sourceRoot":""}